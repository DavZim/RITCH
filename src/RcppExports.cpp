// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// getMessageCountDF
Rcpp::DataFrame getMessageCountDF(std::string filename, unsigned long long bufferSize, bool quiet);
RcppExport SEXP _RITCH_getMessageCountDF(SEXP filenameSEXP, SEXP bufferSizeSEXP, SEXP quietSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< unsigned long long >::type bufferSize(bufferSizeSEXP);
    Rcpp::traits::input_parameter< bool >::type quiet(quietSEXP);
    rcpp_result_gen = Rcpp::wrap(getMessageCountDF(filename, bufferSize, quiet));
    return rcpp_result_gen;
END_RCPP
}
// getOrders
Rcpp::DataFrame getOrders(std::string filename, unsigned long long startMsgCount, unsigned long long endMsgCount, unsigned long long bufferSize, bool quiet);
RcppExport SEXP _RITCH_getOrders(SEXP filenameSEXP, SEXP startMsgCountSEXP, SEXP endMsgCountSEXP, SEXP bufferSizeSEXP, SEXP quietSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< unsigned long long >::type startMsgCount(startMsgCountSEXP);
    Rcpp::traits::input_parameter< unsigned long long >::type endMsgCount(endMsgCountSEXP);
    Rcpp::traits::input_parameter< unsigned long long >::type bufferSize(bufferSizeSEXP);
    Rcpp::traits::input_parameter< bool >::type quiet(quietSEXP);
    rcpp_result_gen = Rcpp::wrap(getOrders(filename, startMsgCount, endMsgCount, bufferSize, quiet));
    return rcpp_result_gen;
END_RCPP
}
// getTrades
Rcpp::DataFrame getTrades(std::string filename, unsigned long long startMsgCount, unsigned long long endMsgCount, unsigned long long bufferSize, bool quiet);
RcppExport SEXP _RITCH_getTrades(SEXP filenameSEXP, SEXP startMsgCountSEXP, SEXP endMsgCountSEXP, SEXP bufferSizeSEXP, SEXP quietSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< unsigned long long >::type startMsgCount(startMsgCountSEXP);
    Rcpp::traits::input_parameter< unsigned long long >::type endMsgCount(endMsgCountSEXP);
    Rcpp::traits::input_parameter< unsigned long long >::type bufferSize(bufferSizeSEXP);
    Rcpp::traits::input_parameter< bool >::type quiet(quietSEXP);
    rcpp_result_gen = Rcpp::wrap(getTrades(filename, startMsgCount, endMsgCount, bufferSize, quiet));
    return rcpp_result_gen;
END_RCPP
}
// getModifications
Rcpp::DataFrame getModifications(std::string filename, unsigned long long startMsgCount, unsigned long long endMsgCount, unsigned long long bufferSize, bool quiet);
RcppExport SEXP _RITCH_getModifications(SEXP filenameSEXP, SEXP startMsgCountSEXP, SEXP endMsgCountSEXP, SEXP bufferSizeSEXP, SEXP quietSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< unsigned long long >::type startMsgCount(startMsgCountSEXP);
    Rcpp::traits::input_parameter< unsigned long long >::type endMsgCount(endMsgCountSEXP);
    Rcpp::traits::input_parameter< unsigned long long >::type bufferSize(bufferSizeSEXP);
    Rcpp::traits::input_parameter< bool >::type quiet(quietSEXP);
    rcpp_result_gen = Rcpp::wrap(getModifications(filename, startMsgCount, endMsgCount, bufferSize, quiet));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RITCH_getMessageCountDF", (DL_FUNC) &_RITCH_getMessageCountDF, 3},
    {"_RITCH_getOrders", (DL_FUNC) &_RITCH_getOrders, 5},
    {"_RITCH_getTrades", (DL_FUNC) &_RITCH_getTrades, 5},
    {"_RITCH_getModifications", (DL_FUNC) &_RITCH_getModifications, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_RITCH(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
